//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Protocol.Core.Esam698Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EsamState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.OneDataEsamState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.IdentityAuthenticationState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.InitSessionState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.VerifyReportDataState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.GetResponseDataState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Protocol.Core.Esam698Service.GetESAMDataState))]
    public partial class EsamState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateDataMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResultState {
            get {
                return this.ResultStateField;
            }
            set {
                if ((this.ResultStateField.Equals(value) != true)) {
                    this.ResultStateField = value;
                    this.RaisePropertyChanged("ResultState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateData {
            get {
                return this.StateDataField;
            }
            set {
                if ((this.StateDataField.Equals(value) != true)) {
                    this.StateDataField = value;
                    this.RaisePropertyChanged("StateData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateDataMessage {
            get {
                return this.StateDataMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StateDataMessageField, value) != true)) {
                    this.StateDataMessageField = value;
                    this.RaisePropertyChanged("StateDataMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneDataEsamState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class OneDataEsamState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EsamDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EsamData {
            get {
                return this.EsamDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EsamDataField, value) != true)) {
                    this.EsamDataField = value;
                    this.RaisePropertyChanged("EsamData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityAuthenticationState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class IdentityAuthenticationState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutEndataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutRandField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutEndata {
            get {
                return this.OutEndataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutEndataField, value) != true)) {
                    this.OutEndataField = value;
                    this.RaisePropertyChanged("OutEndata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutRand {
            get {
                return this.OutRandField;
            }
            set {
                if ((object.ReferenceEquals(this.OutRandField, value) != true)) {
                    this.OutRandField = value;
                    this.RaisePropertyChanged("OutRand");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InitSessionState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class InitSessionState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutRandHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutSessionInitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutSignField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutRandHost {
            get {
                return this.OutRandHostField;
            }
            set {
                if ((object.ReferenceEquals(this.OutRandHostField, value) != true)) {
                    this.OutRandHostField = value;
                    this.RaisePropertyChanged("OutRandHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutSessionInit {
            get {
                return this.OutSessionInitField;
            }
            set {
                if ((object.ReferenceEquals(this.OutSessionInitField, value) != true)) {
                    this.OutSessionInitField = value;
                    this.RaisePropertyChanged("OutSessionInit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutSign {
            get {
                return this.OutSignField;
            }
            set {
                if ((object.ReferenceEquals(this.OutSignField, value) != true)) {
                    this.OutSignField = value;
                    this.RaisePropertyChanged("OutSign");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerifyReportDataState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class VerifyReportDataState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutRSPCTRField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData {
            get {
                return this.OutDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutDataField, value) != true)) {
                    this.OutDataField = value;
                    this.RaisePropertyChanged("OutData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutRSPCTR {
            get {
                return this.OutRSPCTRField;
            }
            set {
                if ((object.ReferenceEquals(this.OutRSPCTRField, value) != true)) {
                    this.OutRSPCTRField = value;
                    this.RaisePropertyChanged("OutRSPCTR");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetResponseDataState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class GetResponseDataState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutAttachDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutMacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutSIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutAttachData {
            get {
                return this.OutAttachDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutAttachDataField, value) != true)) {
                    this.OutAttachDataField = value;
                    this.RaisePropertyChanged("OutAttachData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData {
            get {
                return this.OutDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutDataField, value) != true)) {
                    this.OutDataField = value;
                    this.RaisePropertyChanged("OutData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutMac {
            get {
                return this.OutMacField;
            }
            set {
                if ((object.ReferenceEquals(this.OutMacField, value) != true)) {
                    this.OutMacField = value;
                    this.RaisePropertyChanged("OutMac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutSID {
            get {
                return this.OutSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OutSIDField, value) != true)) {
                    this.OutSIDField = value;
                    this.RaisePropertyChanged("OutSID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetESAMDataState", Namespace="http://schemas.datacontract.org/2004/07/OOPESAM.Core")]
    [System.SerializableAttribute()]
    public partial class GetESAMDataState : Protocol.Core.Esam698Service.EsamState {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutAttachDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutRandHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutSIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutAttachData {
            get {
                return this.OutAttachDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutAttachDataField, value) != true)) {
                    this.OutAttachDataField = value;
                    this.RaisePropertyChanged("OutAttachData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutRandHost {
            get {
                return this.OutRandHostField;
            }
            set {
                if ((object.ReferenceEquals(this.OutRandHostField, value) != true)) {
                    this.OutRandHostField = value;
                    this.RaisePropertyChanged("OutRandHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutSID {
            get {
                return this.OutSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OutSIDField, value) != true)) {
                    this.OutSIDField = value;
                    this.RaisePropertyChanged("OutSID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="htpp://gwkm.com", ConfigurationName="Esam698Service.IEsam698Service")]
    public interface IEsam698Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/ConnectDevice", ReplyAction="htpp://gwkm.com/IEsam698Service/ConnectDeviceResponse")]
        Protocol.Core.Esam698Service.EsamState ConnectDevice(string PutIP, string PutPort, string PutCtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/CloseDevice", ReplyAction="htpp://gwkm.com/IEsam698Service/CloseDeviceResponse")]
        Protocol.Core.Esam698Service.EsamState CloseDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/SetIp", ReplyAction="htpp://gwkm.com/IEsam698Service/SetIpResponse")]
        Protocol.Core.Esam698Service.EsamState SetIp(string PutIP, string PutPort, string PutCtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/CreateRand", ReplyAction="htpp://gwkm.com/IEsam698Service/CreateRandResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState CreateRand(int InRandLen);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_IdentityAuthentication", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_IdentityAuthenticationResponse")]
        Protocol.Core.Esam698Service.IdentityAuthenticationState Meter_Formal_IdentityAuthentication(int Flag, string PutDiv);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_UserControl", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_UserControlResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_UserControl(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdate", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdateResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdate1", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdate1Response")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate1(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdate2", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterUpdate2Response")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate2(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterElseUpdate", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_ParameterElseUpdateResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterElseUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_InCreasePurse", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_InCreasePurseResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InCreasePurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_InintPurse", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_InintPurseResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InintPurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_DataClear1", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_DataClear1Response")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DataClear1(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_DataClear2", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_DataClear2Response")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DataClear2(int counter, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_InfraredAuth", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_InfraredAuthResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InfraredAuth(int Flag, string PutDiv, string PutEsamNo, string PutRand1, string PutRand1Endata, string PutRand2);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_MacCheck", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_MacCheckResponse")]
        Protocol.Core.Esam698Service.EsamState Meter_Formal_MacCheck(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData, string PutMac);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_EncMacWrite", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_EncMacWriteResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_EncMacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_MacWrite", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_MacWriteResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_MacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_EncForCompare", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_EncForCompareResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_EncForCompare(string PutKeyid, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_DecreasePurse", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_DecreasePurseResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DecreasePurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Meter_Formal_Preset_Card", ReplyAction="htpp://gwkm.com/IEsam698Service/Meter_Formal_Preset_CardResponse")]
        Protocol.Core.Esam698Service.EsamState Meter_Formal_Preset_Card(string PutData1, string PutData2, string PutData3, string PutData4, string PutData5);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_InitSession", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_InitSessionResponse")]
        Protocol.Core.Esam698Service.InitSessionState Obj_Meter_Formal_InitSession(int iKeyState, string cDiv, string cASCTR, string cFLG);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifySession", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifySessionResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifySession(int iKeyState, string cDiv, string cRandHost, string cSessionData, string cSign);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyReadData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyReadDataResponse")]
        Protocol.Core.Esam698Service.EsamState Obj_Meter_Formal_VerifyReadData(int iKeyState, int iOperateMode, string cMeterNo, string cRandHost, string cReadData, string cMac, string cOutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyReportData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyReportDataResponse")]
        Protocol.Core.Esam698Service.VerifyReportDataState Obj_Meter_Formal_VerifyReportData(int iKeyState, int iOperateMode, string cMeterNo, string cRandT, string cReportData, string cMac);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetResponseData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetResponseDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetResponseData(int iKeyState, int iOperateMode, string cMeterNo, string RandHost, string cReportData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetSessionData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetSessionDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetSessionData(int iOperateMode, string cESAMNO, string cSessionKey, int cTaskType, string cTaskData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyMeterData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyMeterDataResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifyMeterData(int iKeyState, int iOperateMode, string cESAMNO, string cSessionKey, string cTaskData, string cMac);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetGrpBrdCstData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetGrpBrdCstDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetGrpBrdCstData(int iKeyState, int iOperateMode, string cESAMNO, string cBrdCstAddr, string AGSEQ, string cBrdCstData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_SetESAMData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_SetESAMDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_SetESAMData(int InKeyState, int InOperateMode, string cESAMNO, string cSessionKey, string cMeterNo, string cESAMRand, string cData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetESAMData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetESAMDataResponse")]
        Protocol.Core.Esam698Service.GetESAMDataState Obj_Meter_Formal_GetESAMData(int iKeyState, int iOperateMode, string cMeterNo, string cOAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyESAMData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_VerifyESAMDataResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifyESAMData(int InKeyState, int iOperateMode, string cESAMNO, string cMeterNo, string cRandHost, string cOAD, string cTaskData, string cMAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetPurseData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetPurseDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetPurseData(int iOperateMode, string cESAMNO, string cSessionKey, int cTaskType, string cTaskData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_EncForCompare", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_EncForCompareResponse")]
        Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_EncForCompare(int iKeyState, string cESAMNo, string cDIV, string cKeyID, string cData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetMeterSetData", ReplyAction="htpp://gwkm.com/IEsam698Service/Obj_Meter_Formal_GetMeterSetDataResponse")]
        Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetMeterSetData(int iOperateMode, string cESAMNO, string cSessionKey, string cTaskData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEsam698ServiceChannel : Protocol.Core.Esam698Service.IEsam698Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Esam698ServiceClient : System.ServiceModel.ClientBase<Protocol.Core.Esam698Service.IEsam698Service>, Protocol.Core.Esam698Service.IEsam698Service {
        
        public Esam698ServiceClient() {
        }
        
        public Esam698ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Esam698ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Esam698ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Esam698ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Protocol.Core.Esam698Service.EsamState ConnectDevice(string PutIP, string PutPort, string PutCtime) {
            return base.Channel.ConnectDevice(PutIP, PutPort, PutCtime);
        }
        
        public Protocol.Core.Esam698Service.EsamState CloseDevice() {
            return base.Channel.CloseDevice();
        }
        
        public Protocol.Core.Esam698Service.EsamState SetIp(string PutIP, string PutPort, string PutCtime) {
            return base.Channel.SetIp(PutIP, PutPort, PutCtime);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState CreateRand(int InRandLen) {
            return base.Channel.CreateRand(InRandLen);
        }
        
        public Protocol.Core.Esam698Service.IdentityAuthenticationState Meter_Formal_IdentityAuthentication(int Flag, string PutDiv) {
            return base.Channel.Meter_Formal_IdentityAuthentication(Flag, PutDiv);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_UserControl(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutData) {
            return base.Channel.Meter_Formal_UserControl(Flag, PutRand, PutDiv, PutEsamNo, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate1(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate1(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterUpdate2(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate2(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_ParameterElseUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterElseUpdate(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InCreasePurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_InCreasePurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InintPurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_InintPurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DataClear1(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DataClear1(Flag, PutRand, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DataClear2(int counter, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DataClear2(counter, PutRand, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_InfraredAuth(int Flag, string PutDiv, string PutEsamNo, string PutRand1, string PutRand1Endata, string PutRand2) {
            return base.Channel.Meter_Formal_InfraredAuth(Flag, PutDiv, PutEsamNo, PutRand1, PutRand1Endata, PutRand2);
        }
        
        public Protocol.Core.Esam698Service.EsamState Meter_Formal_MacCheck(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData, string PutMac) {
            return base.Channel.Meter_Formal_MacCheck(Flag, PutRand, PutDiv, PutApdu, PutData, PutMac);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_EncMacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData) {
            return base.Channel.Meter_Formal_EncMacWrite(Flag, PutRand, PutDiv, PutEsamNo, PutFileID, PutDataBegin, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_MacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData) {
            return base.Channel.Meter_Formal_MacWrite(Flag, PutRand, PutDiv, PutEsamNo, PutFileID, PutDataBegin, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_EncForCompare(string PutKeyid, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_EncForCompare(PutKeyid, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Meter_Formal_DecreasePurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DecreasePurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public Protocol.Core.Esam698Service.EsamState Meter_Formal_Preset_Card(string PutData1, string PutData2, string PutData3, string PutData4, string PutData5) {
            return base.Channel.Meter_Formal_Preset_Card(PutData1, PutData2, PutData3, PutData4, PutData5);
        }
        
        public Protocol.Core.Esam698Service.InitSessionState Obj_Meter_Formal_InitSession(int iKeyState, string cDiv, string cASCTR, string cFLG) {
            return base.Channel.Obj_Meter_Formal_InitSession(iKeyState, cDiv, cASCTR, cFLG);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifySession(int iKeyState, string cDiv, string cRandHost, string cSessionData, string cSign) {
            return base.Channel.Obj_Meter_Formal_VerifySession(iKeyState, cDiv, cRandHost, cSessionData, cSign);
        }
        
        public Protocol.Core.Esam698Service.EsamState Obj_Meter_Formal_VerifyReadData(int iKeyState, int iOperateMode, string cMeterNo, string cRandHost, string cReadData, string cMac, string cOutData) {
            return base.Channel.Obj_Meter_Formal_VerifyReadData(iKeyState, iOperateMode, cMeterNo, cRandHost, cReadData, cMac, cOutData);
        }
        
        public Protocol.Core.Esam698Service.VerifyReportDataState Obj_Meter_Formal_VerifyReportData(int iKeyState, int iOperateMode, string cMeterNo, string cRandT, string cReportData, string cMac) {
            return base.Channel.Obj_Meter_Formal_VerifyReportData(iKeyState, iOperateMode, cMeterNo, cRandT, cReportData, cMac);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetResponseData(int iKeyState, int iOperateMode, string cMeterNo, string RandHost, string cReportData) {
            return base.Channel.Obj_Meter_Formal_GetResponseData(iKeyState, iOperateMode, cMeterNo, RandHost, cReportData);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetSessionData(int iOperateMode, string cESAMNO, string cSessionKey, int cTaskType, string cTaskData) {
            return base.Channel.Obj_Meter_Formal_GetSessionData(iOperateMode, cESAMNO, cSessionKey, cTaskType, cTaskData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifyMeterData(int iKeyState, int iOperateMode, string cESAMNO, string cSessionKey, string cTaskData, string cMac) {
            return base.Channel.Obj_Meter_Formal_VerifyMeterData(iKeyState, iOperateMode, cESAMNO, cSessionKey, cTaskData, cMac);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetGrpBrdCstData(int iKeyState, int iOperateMode, string cESAMNO, string cBrdCstAddr, string AGSEQ, string cBrdCstData) {
            return base.Channel.Obj_Meter_Formal_GetGrpBrdCstData(iKeyState, iOperateMode, cESAMNO, cBrdCstAddr, AGSEQ, cBrdCstData);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_SetESAMData(int InKeyState, int InOperateMode, string cESAMNO, string cSessionKey, string cMeterNo, string cESAMRand, string cData) {
            return base.Channel.Obj_Meter_Formal_SetESAMData(InKeyState, InOperateMode, cESAMNO, cSessionKey, cMeterNo, cESAMRand, cData);
        }
        
        public Protocol.Core.Esam698Service.GetESAMDataState Obj_Meter_Formal_GetESAMData(int iKeyState, int iOperateMode, string cMeterNo, string cOAD) {
            return base.Channel.Obj_Meter_Formal_GetESAMData(iKeyState, iOperateMode, cMeterNo, cOAD);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_VerifyESAMData(int InKeyState, int iOperateMode, string cESAMNO, string cMeterNo, string cRandHost, string cOAD, string cTaskData, string cMAC) {
            return base.Channel.Obj_Meter_Formal_VerifyESAMData(InKeyState, iOperateMode, cESAMNO, cMeterNo, cRandHost, cOAD, cTaskData, cMAC);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetPurseData(int iOperateMode, string cESAMNO, string cSessionKey, int cTaskType, string cTaskData) {
            return base.Channel.Obj_Meter_Formal_GetPurseData(iOperateMode, cESAMNO, cSessionKey, cTaskType, cTaskData);
        }
        
        public Protocol.Core.Esam698Service.OneDataEsamState Obj_Meter_Formal_EncForCompare(int iKeyState, string cESAMNo, string cDIV, string cKeyID, string cData) {
            return base.Channel.Obj_Meter_Formal_EncForCompare(iKeyState, cESAMNo, cDIV, cKeyID, cData);
        }
        
        public Protocol.Core.Esam698Service.GetResponseDataState Obj_Meter_Formal_GetMeterSetData(int iOperateMode, string cESAMNO, string cSessionKey, string cTaskData) {
            return base.Channel.Obj_Meter_Formal_GetMeterSetData(iOperateMode, cESAMNO, cSessionKey, cTaskData);
        }
    }
}
